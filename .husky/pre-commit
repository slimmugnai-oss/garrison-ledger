#!/usr/bin/env sh
. "$(dirname -- "$0")/_/husky.sh"

echo "üîç Running pre-commit validation..."

# 1. TypeScript type check
echo "üìò Checking TypeScript..."
npm run type-check
TYPE_CHECK_EXIT=$?
if [ $TYPE_CHECK_EXIT -ne 0 ]; then
  echo "‚ùå TypeScript errors found! Fix them before committing."
  exit 1
fi

# 2. ESLint check (non-blocking - shows issues but doesn't prevent commit)
echo "üîß Running ESLint (info only)..."
npm run lint || echo "‚ö†Ô∏è  ESLint found ${PIPESTATUS[0]} issues. Review output above."

# 3. Secret scan
echo "üîí Running secret scan..."
npm run secret-scan

# Check for console.log in production code (excluding scripts, tests, and logger.ts)
echo "üö´ Checking for console statements in production code..."
CONSOLE_FOUND=$(grep -r "console\." app lib --include="*.ts" --include="*.tsx" --exclude-dir="__tests__" 2>/dev/null | grep -v "lib/logger.ts" | grep -v "// console\." | wc -l | tr -d ' ')
if [ "$CONSOLE_FOUND" -gt "0" ]; then
  echo "‚ùå Found $CONSOLE_FOUND console statement(s) in production code!"
  echo "   Use 'logger' from lib/logger.ts instead."
  echo "   Run: grep -r \"console\\.\" app lib --include=\"*.ts\" --include=\"*.tsx\" --exclude-dir=\"__tests__\" | grep -v \"lib/logger.ts\""
  exit 1
fi
echo "‚úÖ No console statements in production code"
SECRET_EXIT=$?
if [ $SECRET_EXIT -ne 0 ]; then
  echo "‚ùå Secret scan failed! Remove secrets before committing."
  exit 1
fi

# 4. Content linter (only if content files changed)
CHANGED_CONTENT=$(git diff --cached --name-only --diff-filter=ACM | grep '^content/.*\.mdx$' || true)

if [ -n "$CHANGED_CONTENT" ]; then
  echo "üìù Content files changed, running linter..."
  npm run content:lint
  
  CONTENT_LINT_EXIT=$?
  if [ $CONTENT_LINT_EXIT -ne 0 ]; then
    echo "‚ö†Ô∏è  Content linter found issues. Run 'npm run content:autofix' to fix automatically, or use --no-verify to skip."
    exit 1
  fi
fi

echo "‚úÖ All pre-commit checks passed!"
