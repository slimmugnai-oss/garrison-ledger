/**
 * GENERATE MOCK LES PDF FOR TESTING
 * 
 * Creates a realistic-looking LES (Leave and Earnings Statement) PDF
 * for testing the LES Auditor without real military paycheckstub.
 * 
 * Usage: npx ts-node scripts/generate-mock-les.ts
 */

import { jsPDF } from 'jspdf';
import fs from 'fs';
import path from 'path';
import { fileURLToPath } from 'url';
import { dirname } from 'path';

const __filename = fileURLToPath(import.meta.url);
const __dirname = dirname(__filename);

function generateMockLES() {
  const doc = new jsPDF({
    orientation: 'portrait',
    unit: 'mm',
    format: 'letter'
  });
  
  // ============================================================================
  // HEADER
  // ============================================================================
  doc.setFontSize(16);
  doc.setFont('helvetica', 'bold');
  doc.text('LEAVE AND EARNINGS STATEMENT', 105, 20, { align: 'center' });
  
  doc.setFontSize(10);
  doc.setFont('helvetica', 'normal');
  doc.text('Defense Finance and Accounting Service', 105, 26, { align: 'center' });
  
  // ============================================================================
  // MEMBER INFORMATION
  // ============================================================================
  doc.setFontSize(9);
  doc.setFont('helvetica', 'bold');
  doc.text('MEMBER INFORMATION', 15, 40);
  
  doc.setFont('helvetica', 'normal');
  const memberInfo = [
    'NAME: DOE, JOHN A',
    'SSN: ***-**-1234',
    'GRADE: E-05',
    'PAY DATE: 31 OCT 2025',
    'PERIOD COVERED: 01 OCT 2025 - 31 OCT 2025'
  ];
  
  let yPos = 48;
  memberInfo.forEach(line => {
    doc.text(line, 15, yPos);
    yPos += 5;
  });
  
  // ============================================================================
  // ENTITLEMENTS / ALLOWANCES
  // ============================================================================
  doc.setFontSize(9);
  doc.setFont('helvetica', 'bold');
  doc.text('ENTITLEMENTS', 15, 80);
  doc.text('AMOUNT', 160, 80);
  
  // Draw separator line
  doc.line(15, 82, 195, 82);
  
  // Allowances
  doc.setFont('helvetica', 'normal');
  const allowances = [
    { name: 'BASIC PAY', amount: '3,114.30' },
    { name: 'BAH W/DEP', amount: '1,500.00' },
    { name: 'BAS', amount: '460.25' },
    { name: '', amount: '' }, // spacer
  ];
  
  yPos = 88;
  allowances.forEach(item => {
    if (item.name) {
      doc.text(item.name, 20, yPos);
      doc.text(item.amount, 180, yPos, { align: 'right' });
    }
    yPos += 6;
  });
  
  // Total entitlements
  doc.setFont('helvetica', 'bold');
  doc.line(15, yPos - 2, 195, yPos - 2);
  doc.text('TOTAL ENTITLEMENTS', 20, yPos + 3);
  doc.text('5,074.55', 180, yPos + 3, { align: 'right' });
  
  // ============================================================================
  // DEDUCTIONS
  // ============================================================================
  yPos = yPos + 15;
  doc.setFontSize(9);
  doc.setFont('helvetica', 'bold');
  doc.text('DEDUCTIONS', 15, yPos);
  doc.text('AMOUNT', 160, yPos);
  
  doc.line(15, yPos + 2, 195, yPos + 2);
  
  doc.setFont('helvetica', 'normal');
  const deductions = [
    { name: 'FED TAX', amount: '348.00' },
    { name: 'FICA (SOC SEC)', amount: '314.62' },
    { name: 'FICA (MEDICARE)', amount: '73.58' },
    { name: 'STATE TAX', amount: '124.00' },
    { name: 'TSP', amount: '250.00' },
    { name: 'SGLI', amount: '29.00' },
  ];
  
  yPos += 8;
  deductions.forEach(item => {
    doc.text(item.name, 20, yPos);
    doc.text(item.amount, 180, yPos, { align: 'right' });
    yPos += 6;
  });
  
  // Total deductions
  doc.setFont('helvetica', 'bold');
  doc.line(15, yPos - 2, 195, yPos - 2);
  doc.text('TOTAL DEDUCTIONS', 20, yPos + 3);
  doc.text('1,139.20', 180, yPos + 3, { align: 'right' });
  
  // ============================================================================
  // NET PAY
  // ============================================================================
  yPos = yPos + 15;
  doc.setFontSize(11);
  doc.setFont('helvetica', 'bold');
  doc.text('NET PAY', 20, yPos);
  doc.text('$3,935.35', 180, yPos, { align: 'right' });
  
  // ============================================================================
  // FOOTER / NOTES
  // ============================================================================
  doc.setFontSize(7);
  doc.setFont('helvetica', 'italic');
  doc.text('This is a MOCK Leave and Earnings Statement for TESTING purposes only.', 105, 260, { align: 'center' });
  doc.text('Generated by Garrison Ledger LES Auditor Test Suite', 105, 265, { align: 'center' });
  doc.text('NOT A REAL MILITARY PAY DOCUMENT', 105, 270, { align: 'center' });
  
  // ============================================================================
  // ADDITIONAL DETAILS (for parsing test)
  // ============================================================================
  doc.setFontSize(8);
  doc.setFont('helvetica', 'normal');
  doc.text('DUTY STATION: USMA WEST POINT NY', 15, 190);
  doc.text('BRANCH: ARMY', 15, 195);
  doc.text('COMPONENT: ACTIVE DUTY', 15, 200);
  
  // Save PDF
  const outputDir = path.join(__dirname, '..', 'public', 'test-data');
  if (!fs.existsSync(outputDir)) {
    fs.mkdirSync(outputDir, { recursive: true });
  }
  
  const outputPath = path.join(outputDir, 'mock-les-e5-with-deps.pdf');
  const pdfOutput = doc.output('arraybuffer');
  const pdfBuffer = Buffer.from(pdfOutput);
  fs.writeFileSync(outputPath, pdfBuffer);
  
  console.log('‚úÖ Mock LES PDF created successfully!');
  console.log(`üìÑ Location: ${outputPath}`);
  console.log('');
  console.log('üìä Mock LES Details:');
  console.log('  - Rank: E-05 (Staff Sergeant)');
  console.log('  - Period: October 2025');
  console.log('  - BAH: $1,500.00 (with dependents)');
  console.log('  - BAS: $460.25 (enlisted)');
  console.log('  - COLA: $0.00 (CONUS, not applicable)');
  console.log('');
  console.log('üß™ How to Test:');
  console.log('  1. Go to /dashboard/paycheck-audit');
  console.log('  2. Click "Upload PDF" tab');
  console.log('  3. Upload: public/test-data/mock-les-e5-with-deps.pdf');
  console.log('  4. Expected: GREEN flags (all allowances correct for E-5 with deps at West Point)');
  console.log('');
  console.log('üìÅ File size:', Math.round(pdfBuffer.length / 1024), 'KB');
  
  return outputPath;
}

// Run the generator
generateMockLES();

